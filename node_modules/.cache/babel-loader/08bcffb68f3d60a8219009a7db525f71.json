{"ast":null,"code":"var _jsxFileName = \"/home/ujjwal.jain/apollo-client/src/pages/Trainee/Component/TableComponent/TableComponent.jsx\";\n\n/* eslint-disable react/no-array-index-key */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport { withLoaderandMessage } from '../../../../components/index';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\n\nconst useStyles = theme => ({\n  table: {\n    minWidth: 650\n  },\n  header: {\n    color: 'grey'\n  },\n  cover: {\n    '&:nth-of-type(odd)': {\n      backgroundColor: theme.palette.action.hover\n    },\n    '&:hover': {\n      backgroundColor: 'darkgrey !important'\n    }\n  },\n  action: {\n    display: 'flex',\n    flexDirection: 'column',\n    maxHeight: 10,\n    marginLeft: theme.spacing(10)\n  },\n  pages: {\n    color: 'grey'\n  }\n});\n\nfunction TableComponent(props) {\n  const {\n    classes,\n    data,\n    column,\n    actions,\n    onSort,\n    orderBy,\n    order,\n    onSelect,\n    count,\n    page,\n    rowsPerPage,\n    onChangePage,\n    onChangeRowsPerPage\n  } = props;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(TableContainer, {\n    component: Paper,\n    elevation: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    className: classes.table,\n    \"aria-label\": \"simple table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TableHead, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TableRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }\n  }, column.map(col => /*#__PURE__*/React.createElement(TableCell, {\n    className: classes.header,\n    align: col.align,\n    sortDirection: orderBy === col.label ? order : false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(TableSortLabel, {\n    active: orderBy === col.label,\n    direction: orderBy === col.label ? order : 'asc',\n    onClick: onSort(col.label),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 19\n    }\n  }, col.label))))), /*#__PURE__*/React.createElement(TableBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 11\n    }\n  }, data.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(element => /*#__PURE__*/React.createElement(TableRow, {\n    className: classes.cover,\n    hover: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 17\n    }\n  }, column.map(({\n    field,\n    align,\n    format\n  }) => /*#__PURE__*/React.createElement(TableCell, {\n    align: align,\n    onClick: onSelect(element),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 21\n    }\n  }, format !== undefined ? format(element[field]) : element[field])), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 19\n    }\n  }, actions.map(({\n    Icon,\n    handler\n  }) => /*#__PURE__*/React.createElement(IconButton, {\n    onClick: handler(element),\n    className: classes.action,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 21\n    }\n  }, Icon))))))), /*#__PURE__*/React.createElement(TablePagination, {\n    className: classes.pages,\n    rowsPerPageOptions: [5, 10, 20, 25],\n    component: \"div\",\n    count: count,\n    rowsPerPage: rowsPerPage,\n    page: page,\n    onChangePage: onChangePage,\n    onChangeRowsPerPage: onChangeRowsPerPage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }\n  })));\n}\n\nTableComponent.propTypes = {\n  data: PropTypes.arrayOf(PropTypes.object).isRequired,\n  column: PropTypes.arrayOf(PropTypes.object).isRequired,\n  classes: PropTypes.objectOf(PropTypes.string).isRequired,\n  orderBy: PropTypes.string,\n  order: PropTypes.string,\n  onSort: PropTypes.func,\n  actions: PropTypes.arrayOf(PropTypes.object).isRequired,\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired\n};\nTableComponent.defaultProps = {\n  orderBy: '',\n  order: 'asc',\n  onSort: () => {}\n};\nconst WrapTable = withLoaderandMessage(TableComponent);\nexport default withStyles(useStyles)(WrapTable);","map":{"version":3,"sources":["/home/ujjwal.jain/apollo-client/src/pages/Trainee/Component/TableComponent/TableComponent.jsx"],"names":["React","PropTypes","withStyles","withLoaderandMessage","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","IconButton","TablePagination","TableSortLabel","useStyles","theme","table","minWidth","header","color","cover","backgroundColor","palette","action","hover","display","flexDirection","maxHeight","marginLeft","spacing","pages","TableComponent","props","classes","data","column","actions","onSort","orderBy","order","onSelect","count","page","rowsPerPage","onChangePage","onChangeRowsPerPage","map","col","align","label","slice","element","field","format","undefined","Icon","handler","propTypes","arrayOf","object","isRequired","objectOf","string","func","number","defaultProps","WrapTable"],"mappings":"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","sourcesContent":["/* eslint-disable react/no-array-index-key */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport {withLoaderandMessage} from '../../../../components/index';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport TablePagination from '@material-ui/core/TablePagination';\n\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\n\nconst useStyles = (theme) => ({\n  table: {\n    minWidth: 650,\n  },\n  header: {\n    color: 'grey',\n  },\n  cover: {\n    '&:nth-of-type(odd)': {\n      backgroundColor: theme.palette.action.hover,\n    },\n    '&:hover': {\n      backgroundColor: 'darkgrey !important',\n    },\n  },\n  action: {\n    display: 'flex',\n    flexDirection: 'column',\n    maxHeight: 10,\n    marginLeft: theme.spacing(10),\n  },\n  pages: {\n    color: 'grey',\n  },\n});\n\nfunction TableComponent(props) {\n  const {\n    classes,\n    data,\n    column,\n    actions,\n    onSort,\n    orderBy,\n    order,\n    onSelect,\n    count,\n    page,\n    rowsPerPage,\n    onChangePage,\n    onChangeRowsPerPage,\n  } = props;\n  return (\n    <div>\n      <TableContainer component={Paper} elevation={3}>\n        <Table className={classes.table} aria-label='simple table'>\n          <TableHead>\n            <TableRow>\n              {column.map((col) => (\n                <TableCell\n                  className={classes.header}\n                  align={col.align}\n                  sortDirection={orderBy === col.label ? order : false}\n                >\n                  <TableSortLabel\n                    active={orderBy === col.label}\n                    direction={orderBy === col.label ? order : 'asc'}\n                    onClick={onSort(col.label)}\n                  >\n                    {col.label}\n                  </TableSortLabel>\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {data\n              .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n              .map((element) => (\n                <TableRow className={classes.cover} hover>\n                  {column.map(({ field, align, format }) => (\n                    <TableCell align={align} onClick={onSelect(element)}>\n                      {format !== undefined\n                        ? format(element[field])\n                        : element[field]}\n                    </TableCell>\n                  ))}\n                  <TableCell>\n                  {actions.map(({ Icon, handler }) => (\n                    <IconButton\n                      onClick={handler(element)}\n                      className={classes.action}\n                    >\n                      {Icon}\n                    </IconButton>\n                  ))}\n                  </TableCell>\n                </TableRow>\n              ))}\n          </TableBody>\n        </Table>\n        <TablePagination\n          className={classes.pages}\n          rowsPerPageOptions={[5, 10, 20,25]}\n          component='div'\n          count={count}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          onChangePage={onChangePage}\n          onChangeRowsPerPage={onChangeRowsPerPage}\n        />\n      </TableContainer>\n    </div>\n  );\n}\n\nTableComponent.propTypes = {\n  data: PropTypes.arrayOf(PropTypes.object).isRequired,\n  column: PropTypes.arrayOf(PropTypes.object).isRequired,\n  classes: PropTypes.objectOf(PropTypes.string).isRequired,\n  orderBy: PropTypes.string,\n  order: PropTypes.string,\n  onSort: PropTypes.func,\n  actions: PropTypes.arrayOf(PropTypes.object).isRequired,\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\nTableComponent.defaultProps = {\n  orderBy: '',\n  order: 'asc',\n  onSort: () => {},\n};\nconst WrapTable = withLoaderandMessage(TableComponent)\nexport default withStyles(useStyles)(WrapTable);\n"]},"metadata":{},"sourceType":"module"}