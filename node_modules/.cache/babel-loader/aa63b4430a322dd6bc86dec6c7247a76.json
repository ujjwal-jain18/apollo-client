{"ast":null,"code":"var _jsxFileName = \"/home/ujjwal.jain/apollo-client/src/pages/Trainee/Component/AddDialog/AddDialog.jsx\";\n\n/* eslint-disable no-console */\n\n/* eslint-disable react/destructuring-assignment */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { TextField, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, Button, InputAdornment } from '@material-ui/core';\nimport { withStyles } from '@material-ui/core/styles';\nimport { snackbarContext } from './../../../../contexts/snackbarProvider';\nimport callApi from '../../../../libs/utils/api';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport * as yup from 'yup';\nimport EmailIcon from '@material-ui/icons/Email';\nimport PersonIcon from '@material-ui/icons/Person';\nimport VisibilityOffIcon from '@material-ui/icons/VisibilityOff';\n\nconst styling = () => ({\n  Content: {\n    display: 'flex',\n    flexDirection: 'column'\n  },\n  Text: {\n    margin: 15\n  },\n  PasswordText: {\n    display: 'flex',\n    flexDirection: 'row'\n  },\n  Demo: {\n    flex: '1'\n  }\n});\n\nclass AddDialog extends React.Component {\n  constructor(props) {\n    super(props);\n    this.schema = yup.object().shape({\n      name: yup.string().required('Name is required').min(3),\n      email: yup.string().email().required('Email is required'),\n      password: yup.string().required('password is required').matches(/^(?=.*[A-Za-z])(?=.*\\d)(?=.*[@$!%*#?&])[A-Za-z\\d@$!%*#?&]{8,}$/, 'must contain 8 characters at least one \\n uppercase one lowercase and one number'),\n      confirmPassword: yup.string().oneOf([yup.ref('password'), null], 'Passwords must match').required('password is required')\n    });\n\n    this.handleChange = key => ({\n      target: {\n        value\n      }\n    }) => {\n      this.setState({\n        [key]: value\n      });\n    };\n\n    this.getError = field => {\n      const {\n        touched,\n        error\n      } = this.state;\n\n      if (touched[field]) {\n        this.schema.validateAt(field, this.state).then(() => {\n          if (error[field] !== '') {\n            this.setState({\n              error: { ...error,\n                [field]: ''\n              }\n            }, () => {\n              this.hasErrors();\n            });\n          }\n        }).catch(err => {\n          if (err.message !== error[field]) {\n            this.setState({\n              error: { ...error,\n                [field]: err.message\n              }\n            }, () => {\n              this.hasErrors();\n            });\n          }\n        });\n      }\n\n      return error[field];\n    };\n\n    this.isTouched = field => {\n      const {\n        touched\n      } = this.state;\n      this.setState({\n        touched: { ...touched,\n          [field]: true\n        }\n      }, () => {\n        this.hasErrors();\n      });\n    };\n\n    this.hasErrors = () => {\n      const {\n        error,\n        touched\n      } = this.state;\n      let alltouched = Object.values(touched);\n      let iserror = Object.values(error);\n      iserror = iserror.filter(errorMessage => errorMessage !== '');\n      alltouched = alltouched.every(value => value);\n      iserror = iserror.every(value => value === '');\n\n      if (iserror && alltouched) {\n        this.setState({\n          disabled: false\n        });\n      } else {\n        this.setState({\n          disabled: true\n        });\n      }\n    };\n\n    this.onClickHandler = async value => {\n      const {\n        name,\n        email,\n        password\n      } = this.state;\n      const token = localStorage.getItem('token');\n      const {\n        onSubmit\n      } = this.props;\n      await this.setState({\n        loader: true,\n        disabled: true\n      });\n      const response = await callApi('post', '/trainee', {\n        data: {\n          name,\n          email,\n          password\n        }\n      }, {\n        headers: {\n          authorization: token,\n          Accept: 'application/json',\n          'Content-Type': 'application/json'\n        }\n      });\n\n      if (response.status === 'ok') {\n        onSubmit({\n          name,\n          email,\n          password\n        });\n        value(response.message, 'success');\n      } else {\n        value(response.message, 'error');\n      }\n\n      this.setState({\n        loader: false,\n        disabled: false\n      });\n    };\n\n    this.state = {\n      name: '',\n      email: '',\n      password: '',\n      confirmPassword: '',\n      loader: false,\n      disabled: true,\n      touched: {\n        name: false,\n        email: false,\n        password: false,\n        confirmPassword: false\n      },\n      error: {\n        name: '',\n        email: '',\n        password: '',\n        confirmPassword: ''\n      }\n    };\n  }\n\n  render() {\n    const {\n      open,\n      onClose\n    } = this.props;\n    const {\n      classes\n    } = this.props;\n    const {\n      error,\n      disabled,\n      loader\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Dialog, {\n      open: open,\n      onClose: onClose,\n      \"aria-labelledby\": \"form-dialog-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(DialogTitle, {\n      id: \"form-dialog-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 11\n      }\n    }, \"Add Trainee\"), /*#__PURE__*/React.createElement(DialogContent, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(DialogContentText, {\n      className: classes.Content,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 13\n      }\n    }, \"Enter your trainee details\"), /*#__PURE__*/React.createElement(TextField, {\n      autoFocus: true,\n      error: !!error.name,\n      id: \"name\",\n      label: \"Name*\",\n      type: \"name\",\n      variant: \"outlined\",\n      className: classes.text,\n      helperText: this.getError('name'),\n      onChange: this.handleChange('name'),\n      onBlur: () => this.isTouched('name'),\n      fullWidth: true,\n      InputProps: {\n        startAdornment: /*#__PURE__*/React.createElement(InputAdornment, {\n          position: \"start\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 19\n          }\n        }, /*#__PURE__*/React.createElement(PersonIcon, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 21\n          }\n        }))\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(TextField, {\n      id: \"email\",\n      error: !!error.email,\n      label: \"EmailAddress\",\n      type: \"email\",\n      variant: \"outlined\",\n      className: classes.text,\n      onChange: this.handleChange('email'),\n      helperText: this.getError('email'),\n      onBlur: () => this.isTouched('email'),\n      InputProps: {\n        startAdornment: /*#__PURE__*/React.createElement(InputAdornment, {\n          position: \"start\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 19\n          }\n        }, /*#__PURE__*/React.createElement(EmailIcon, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 21\n          }\n        }))\n      },\n      fullWidth: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.PasswordText,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.Demo,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      id: \"password\",\n      error: !!error.password,\n      label: \"password\",\n      type: \"password\",\n      variant: \"outlined\",\n      className: classes.text,\n      onChange: this.handleChange('password'),\n      helperText: this.getError('password'),\n      onBlur: () => this.isTouched('password'),\n      InputProps: {\n        startAdornment: /*#__PURE__*/React.createElement(InputAdornment, {\n          position: \"start\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 264,\n            columnNumber: 23\n          }\n        }, /*#__PURE__*/React.createElement(VisibilityOffIcon, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 265,\n            columnNumber: 25\n          }\n        }))\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 17\n      }\n    })), \"\\xA0 \\xA0\", /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.Demo,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      id: \"confirm-password\",\n      error: !!error.confirmPassword,\n      label: \"Confirm-password\",\n      type: \"password\",\n      variant: \"outlined\",\n      className: classes.text,\n      onBlur: () => this.isTouched('confirmPassword'),\n      helperText: this.getError('confirmPassword'),\n      onChange: this.handleChange('confirmPassword'),\n      InputProps: {\n        startAdornment: /*#__PURE__*/React.createElement(InputAdornment, {\n          position: \"start\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 285,\n            columnNumber: 23\n          }\n        }, /*#__PURE__*/React.createElement(VisibilityOffIcon, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 286,\n            columnNumber: 25\n          }\n        }))\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 17\n      }\n    })))), /*#__PURE__*/React.createElement(DialogActions, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      onClick: onClose,\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 13\n      }\n    }, \"Cancel\"), /*#__PURE__*/React.createElement(snackbarContext.Consumer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 13\n      }\n    }, value => /*#__PURE__*/React.createElement(Button, {\n      onClick: () => this.onClickHandler(value),\n      color: \"primary\",\n      variant: \"contained\",\n      disabled: disabled,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 19\n      }\n    }, loader ? /*#__PURE__*/React.createElement(CircularProgress, {\n      size: 20,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 35\n      }\n    }) : ''), \"Submit\")))));\n  }\n\n}\n\nAddDialog.propTypes = {\n  open: PropTypes.bool.isRequired,\n  onClose: PropTypes.func.isRequired,\n  onSubmit: PropTypes.func.isRequired,\n  classes: PropTypes.objectOf(PropTypes.string).isRequired\n};\nexport default withStyles(styling)(AddDialog);","map":{"version":3,"sources":["/home/ujjwal.jain/apollo-client/src/pages/Trainee/Component/AddDialog/AddDialog.jsx"],"names":["React","PropTypes","TextField","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","Button","InputAdornment","withStyles","snackbarContext","callApi","CircularProgress","yup","EmailIcon","PersonIcon","VisibilityOffIcon","styling","Content","display","flexDirection","Text","margin","PasswordText","Demo","flex","AddDialog","Component","constructor","props","schema","object","shape","name","string","required","min","email","password","matches","confirmPassword","oneOf","ref","handleChange","key","target","value","setState","getError","field","touched","error","state","validateAt","then","hasErrors","catch","err","message","isTouched","alltouched","Object","values","iserror","filter","errorMessage","every","disabled","onClickHandler","token","localStorage","getItem","onSubmit","loader","response","data","headers","authorization","Accept","status","render","open","onClose","classes","text","startAdornment","propTypes","bool","isRequired","func","objectOf"],"mappings":"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","sourcesContent":["/* eslint-disable no-console */\n/* eslint-disable react/destructuring-assignment */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  TextField,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n  Button,\n  InputAdornment,\n} from '@material-ui/core';\nimport { withStyles } from '@material-ui/core/styles';\nimport { snackbarContext } from './../../../../contexts/snackbarProvider';\nimport callApi from '../../../../libs/utils/api';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport * as yup from 'yup';\nimport EmailIcon from '@material-ui/icons/Email';\nimport PersonIcon from '@material-ui/icons/Person';\nimport VisibilityOffIcon from '@material-ui/icons/VisibilityOff';\n\nconst styling = () => ({\n  Content: {\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  Text: {\n    margin: 15,\n  },\n  PasswordText: {\n    display: 'flex',\n    flexDirection: 'row',\n  },\n  Demo: {\n    flex: '1',\n  },\n});\nclass AddDialog extends React.Component {\n  schema = yup.object().shape({\n    name: yup.string().required('Name is required').min(3),\n    email: yup.string().email().required('Email is required'),\n    password: yup\n      .string()\n      .required('password is required')\n      .matches(\n        /^(?=.*[A-Za-z])(?=.*\\d)(?=.*[@$!%*#?&])[A-Za-z\\d@$!%*#?&]{8,}$/,\n        'must contain 8 characters at least one \\n uppercase one lowercase and one number'\n      ),\n    confirmPassword: yup\n      .string()\n      .oneOf([yup.ref('password'), null], 'Passwords must match')\n      .required('password is required'),\n  });\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: '',\n      email: '',\n      password: '',\n      confirmPassword: '',\n      loader: false,\n      disabled: true,\n      touched: {\n        name: false,\n        email: false,\n        password: false,\n        confirmPassword: false,\n      },\n      error: {\n        name: '',\n        email: '',\n        password: '',\n        confirmPassword: '',\n      },\n    };\n  }\n\n  handleChange = (key) => ({ target: { value } }) => {\n    this.setState({ [key]: value });\n  };\n\n  // eslint-disable-next-line consistent-return\n  getError = (field) => {\n    const { touched, error } = this.state;\n    if (touched[field]) {\n      this.schema\n        .validateAt(field, this.state)\n        .then(() => {\n          if (error[field] !== '') {\n            this.setState(\n              {\n                error: {\n                  ...error,\n                  [field]: '',\n                },\n              },\n              () => {\n                this.hasErrors();\n              }\n            );\n          }\n        })\n        .catch((err) => {\n          if (err.message !== error[field]) {\n            this.setState(\n              {\n                error: {\n                  ...error,\n                  [field]: err.message,\n                },\n              },\n              () => {\n                this.hasErrors();\n              }\n            );\n          }\n        });\n    }\n    return error[field];\n  };\n\n  isTouched = (field) => {\n    const { touched } = this.state;\n    this.setState(\n      {\n        touched: {\n          ...touched,\n          [field]: true,\n        },\n      },\n      () => {\n        this.hasErrors();\n      }\n    );\n  };\n\n  hasErrors = () => {\n    const { error, touched } = this.state;\n    let alltouched = Object.values(touched);\n    let iserror = Object.values(error);\n    iserror = iserror.filter((errorMessage) => errorMessage !== '');\n    alltouched = alltouched.every((value) => value);\n    iserror = iserror.every((value) => value === '');\n    if (iserror && alltouched) {\n      this.setState({\n        disabled: false,\n      });\n    } else {\n      this.setState({\n        disabled: true,\n      });\n    }\n  };\n  onClickHandler = async (value) => {\n    const { name, email, password } = this.state;\n    const token = localStorage.getItem('token');\n    const { onSubmit } = this.props;\n    await this.setState({\n      loader: true,\n      disabled: true,\n    });\n\n    const response = await callApi(\n      'post',\n      '/trainee',\n      { data: { name, email, password } },\n      {\n        headers: {\n          authorization: token,\n          Accept: 'application/json',\n          'Content-Type': 'application/json',\n        },\n      }\n    );\n    if (response.status === 'ok') {\n      onSubmit({ name, email, password });\n      value(response.message, 'success');\n    } else {\n      value(response.message, 'error');\n    }\n\n    this.setState({\n      loader: false,\n      disabled: false,\n    });\n  };\n\n  render() {\n    const { open, onClose } = this.props;\n    const { classes } = this.props;\n    const { error, disabled, loader } = this.state;\n    return (\n      <div>\n        <Dialog\n          open={open}\n          onClose={onClose}\n          aria-labelledby='form-dialog-title'\n        >\n          <DialogTitle id='form-dialog-title'>Add Trainee</DialogTitle>\n          <DialogContent>\n            <DialogContentText className={classes.Content}>\n              Enter your trainee details\n            </DialogContentText>\n            <TextField\n              autoFocus\n              error={!!error.name}\n              id='name'\n              label='Name*'\n              type='name'\n              variant='outlined'\n              className={classes.text}\n              helperText={this.getError('name')}\n              onChange={this.handleChange('name')}\n              onBlur={() => this.isTouched('name')}\n              fullWidth\n              InputProps={{\n                startAdornment: (\n                  <InputAdornment position='start'>\n                    <PersonIcon />\n                  </InputAdornment>\n                ),\n              }}\n            />\n            <br />\n            <br />\n            <TextField\n              id='email'\n              error={!!error.email}\n              label='EmailAddress'\n              type='email'\n              variant='outlined'\n              className={classes.text}\n              onChange={this.handleChange('email')}\n              helperText={this.getError('email')}\n              onBlur={() => this.isTouched('email')}\n              InputProps={{\n                startAdornment: (\n                  <InputAdornment position='start'>\n                    <EmailIcon />\n                  </InputAdornment>\n                ),\n              }}\n              fullWidth\n            />\n            <br />\n            <br />\n            <div className={classes.PasswordText}>\n              <div className={classes.Demo}>\n                <TextField\n                  id='password'\n                  error={!!error.password}\n                  label='password'\n                  type='password'\n                  variant='outlined'\n                  className={classes.text}\n                  onChange={this.handleChange('password')}\n                  helperText={this.getError('password')}\n                  onBlur={() => this.isTouched('password')}\n                  InputProps={{\n                    startAdornment: (\n                      <InputAdornment position='start'>\n                        <VisibilityOffIcon />\n                      </InputAdornment>\n                    ),\n                  }}\n                />\n              </div>\n              &nbsp; &nbsp;\n              <div className={classes.Demo}>\n                <TextField\n                  id='confirm-password'\n                  error={!!error.confirmPassword}\n                  label='Confirm-password'\n                  type='password'\n                  variant='outlined'\n                  className={classes.text}\n                  onBlur={() => this.isTouched('confirmPassword')}\n                  helperText={this.getError('confirmPassword')}\n                  onChange={this.handleChange('confirmPassword')}\n                  InputProps={{\n                    startAdornment: (\n                      <InputAdornment position='start'>\n                        <VisibilityOffIcon />\n                      </InputAdornment>\n                    ),\n                  }}\n                />\n              </div>\n            </div>\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={onClose} color='primary'>\n              Cancel\n            </Button>\n            <snackbarContext.Consumer>\n              {(value) => (\n                <Button\n                  onClick={() => this.onClickHandler(value)}\n                  color='primary'\n                  variant='contained'\n                  disabled={disabled}\n                >\n                  <span>{loader ? <CircularProgress size={20} /> : ''}</span>\n                  Submit\n                </Button>\n              )}\n            </snackbarContext.Consumer>\n          </DialogActions>\n        </Dialog>\n      </div>\n    );\n  }\n}\nAddDialog.propTypes = {\n  open: PropTypes.bool.isRequired,\n  onClose: PropTypes.func.isRequired,\n  onSubmit: PropTypes.func.isRequired,\n  classes: PropTypes.objectOf(PropTypes.string).isRequired,\n};\nexport default withStyles(styling)(AddDialog);\n"]},"metadata":{},"sourceType":"module"}