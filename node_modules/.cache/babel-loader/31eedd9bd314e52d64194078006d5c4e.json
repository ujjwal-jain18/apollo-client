{"ast":null,"code":"var _jsxFileName = \"/home/ujjwal.jain/apollo-client/src/pages/Trainee/Component/EditDialog/EditDialog.jsx\";\n\n/* eslint-disable no-console */\n\n/* eslint-disable react/destructuring-assignment */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { snackbarContext } from './../../../../contexts/snackbarProvider';\nimport callApi from '../../../../libs/utils/api';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport * as yup from 'yup';\nimport { TextField, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, Button, InputAdornment } from '@material-ui/core';\nimport Grid from '@material-ui/core/Grid';\nimport EmailIcon from '@material-ui/icons/Email';\nimport PersonIcon from '@material-ui/icons/Person';\n\nclass EditDialog extends React.Component {\n  constructor(props) {\n    super(props);\n    this.schema = yup.object().shape({\n      name: yup.string().required('Name is required').min(3),\n      email: yup.string().email().required('Email is required')\n    });\n\n    this.handleSet = () => {\n      const {\n        data\n      } = this.props;\n      this.setState({\n        name: data.name,\n        email: data.email\n      });\n    };\n\n    this.handleOnChange = prop => event => {\n      this.setState({\n        [prop]: event.target.value\n      });\n    };\n\n    this.getError = field => {\n      const {\n        error\n      } = this.state;\n      this.schema.validateAt(field, this.state).then(() => {\n        if (error[field] !== '') {\n          this.setState({\n            error: { ...error,\n              [field]: ''\n            }\n          }, () => {\n            this.hasErrors();\n          });\n        }\n      }).catch(err => {\n        if (err.message !== error[field]) {\n          this.setState({\n            error: { ...error,\n              [field]: err.message\n            }\n          }, () => {\n            this.hasErrors();\n          });\n        }\n      });\n      return error[field];\n    };\n\n    this.hasErrors = () => {\n      const {\n        name,\n        email,\n        error\n      } = this.state;\n      const {\n        data\n      } = this.props;\n      const {\n        name: editName,\n        email: editEmail\n      } = data;\n      let iserror = Object.values(error);\n      iserror = iserror.filter(errorMessage => errorMessage !== '');\n      iserror = iserror.every(value => value === '');\n\n      if (!iserror || name === editName && email === editEmail) {\n        this.setState({\n          disabled: true\n        });\n      }\n\n      if (iserror && (name !== editName || email !== editEmail)) {\n        this.setState({\n          disabled: false\n        });\n      }\n    };\n\n    this.onClickHandler = async value => {\n      const {\n        name,\n        email,\n        password\n      } = this.state;\n      const token = localStorage.getItem('token');\n      const {\n        handleEdit,\n        data,\n        handleEditClose\n      } = this.props;\n      const {\n        originalId: editId\n      } = data;\n      await this.setState({\n        loader: true,\n        disabled: true\n      });\n      const response = await callApi('put', '/trainee', {\n        data: {\n          name,\n          email,\n          password,\n          id: editId\n        }\n      }, {\n        headers: {\n          authorization: token,\n          Accept: 'application/json',\n          'Content-Type': 'application/json'\n        }\n      });\n\n      if (response.status === 'ok') {\n        handleEdit({\n          name,\n          email\n        });\n        value(response.message, 'success');\n        handleEditClose();\n      } else {\n        value(response.message, 'error');\n      }\n\n      this.setState({\n        loader: false,\n        disabled: false\n      });\n    };\n\n    this.state = {\n      name: '',\n      email: '',\n      loader: false,\n      disabled: true,\n      error: {\n        name: '',\n        email: ''\n      }\n    };\n  }\n\n  render() {\n    const {\n      Editopen,\n      handleEditClose,\n      data\n    } = this.props;\n    const {\n      error,\n      loader,\n      disabled\n    } = this.state;\n    const {\n      name: editName,\n      email: editEmail\n    } = data;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Dialog, {\n      open: Editopen,\n      onClose: handleEditClose,\n      onMouseEnter: this.handleSet,\n      variant: \"outlined\",\n      color: \"primary\",\n      \"aria-labelledby\": \"form-dialog-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(DialogTitle, {\n      id: \"form-dialog-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 11\n      }\n    }, \"Edit Trainee\"), /*#__PURE__*/React.createElement(DialogContent, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(DialogContentText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 13\n      }\n    }, \"Edit your trainee details\"), /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      spacing: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      autoFocus: true,\n      error: !!error.name,\n      id: \"name\",\n      type: \"text\",\n      variant: \"outlined\",\n      style: {\n        width: '100%'\n      },\n      margin: \"dense\",\n      defaultValue: editName,\n      helperText: this.getError('name'),\n      onChange: this.handleOnChange('name'),\n      fullWidth: true,\n      InputProps: {\n        startAdornment: /*#__PURE__*/React.createElement(InputAdornment, {\n          position: \"start\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 23\n          }\n        }, /*#__PURE__*/React.createElement(PersonIcon, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 25\n          }\n        }))\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      error: !!error.email,\n      id: \"email\",\n      type: \"email\",\n      variant: \"outlined\",\n      style: {\n        width: '100%'\n      },\n      margin: \"dense\",\n      defaultValue: editEmail,\n      helperText: this.getError('email'),\n      onChange: this.handleOnChange('email'),\n      InputProps: {\n        startAdornment: /*#__PURE__*/React.createElement(InputAdornment, {\n          position: \"start\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 23\n          }\n        }, /*#__PURE__*/React.createElement(EmailIcon, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 25\n          }\n        }))\n      },\n      fullWidth: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 17\n      }\n    }))), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(DialogActions, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      onClick: handleEditClose,\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 13\n      }\n    }, \"Cancel\"), /*#__PURE__*/React.createElement(snackbarContext.Consumer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 13\n      }\n    }, value => /*#__PURE__*/React.createElement(Button, {\n      onClick: () => this.onClickHandler(value),\n      color: \"primary\",\n      variant: \"contained\",\n      disabled: disabled,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 19\n      }\n    }, loader ? /*#__PURE__*/React.createElement(CircularProgress, {\n      size: 20,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 35\n      }\n    }) : ''), \"Submit\")))));\n  }\n\n}\n\nEditDialog.propTypes = {\n  Editopen: PropTypes.bool.isRequired,\n  handleEditClose: PropTypes.func.isRequired,\n  handleEdit: PropTypes.func.isRequired\n};\nexport default EditDialog;","map":{"version":3,"sources":["/home/ujjwal.jain/apollo-client/src/pages/Trainee/Component/EditDialog/EditDialog.jsx"],"names":["React","PropTypes","snackbarContext","callApi","CircularProgress","yup","TextField","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","Button","InputAdornment","Grid","EmailIcon","PersonIcon","EditDialog","Component","constructor","props","schema","object","shape","name","string","required","min","email","handleSet","data","setState","handleOnChange","prop","event","target","value","getError","field","error","state","validateAt","then","hasErrors","catch","err","message","editName","editEmail","iserror","Object","values","filter","errorMessage","every","disabled","onClickHandler","password","token","localStorage","getItem","handleEdit","handleEditClose","originalId","editId","loader","response","id","headers","authorization","Accept","status","render","Editopen","width","startAdornment","propTypes","bool","isRequired","func"],"mappings":"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","sourcesContent":["/* eslint-disable no-console */\n/* eslint-disable react/destructuring-assignment */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { snackbarContext } from './../../../../contexts/snackbarProvider';\nimport callApi from '../../../../libs/utils/api';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport * as yup from 'yup';\nimport {\n  TextField,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n  Button,\n  InputAdornment,\n} from '@material-ui/core';\nimport Grid from '@material-ui/core/Grid';\nimport EmailIcon from '@material-ui/icons/Email';\nimport PersonIcon from '@material-ui/icons/Person';\n\nclass EditDialog extends React.Component {\n  schema = yup.object().shape({\n    name: yup.string().required('Name is required').min(3),\n    email: yup.string().email().required('Email is required'),\n  });\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: '',\n      email: '',\n      loader: false,\n      disabled: true,\n      error: {\n        name: '',\n        email: '',\n      },\n    };\n  }\n\n  handleSet = () => {\n    const { data } = this.props;\n    this.setState({\n      name: data.name,\n      email: data.email,\n    });\n  };\n\n  handleOnChange = (prop) => (event) => {\n    this.setState({\n      [prop]: event.target.value,\n    });\n  };\n\n  // eslint-disable-next-line consistent-return\n  getError = (field) => {\n    const { error } = this.state;\n    this.schema\n      .validateAt(field, this.state)\n      .then(() => {\n        if (error[field] !== '') {\n          this.setState(\n            {\n              error: {\n                ...error,\n                [field]: '',\n              },\n            },\n            () => {\n              this.hasErrors();\n            }\n          );\n        }\n      })\n      .catch((err) => {\n        if (err.message !== error[field]) {\n          this.setState(\n            {\n              error: {\n                ...error,\n                [field]: err.message,\n              },\n            },\n            () => {\n              this.hasErrors();\n            }\n          );\n        }\n      });\n    return error[field];\n  };\n\n  hasErrors = () => {\n    const { name, email, error } = this.state;\n    const { data } = this.props;\n    const { name: editName, email: editEmail } = data;\n    let iserror = Object.values(error);\n    iserror = iserror.filter((errorMessage) => errorMessage !== '');\n    iserror = iserror.every((value) => value === '');\n    if (!iserror || (name === editName && email === editEmail)) {\n      this.setState({\n        disabled: true,\n      });\n    }\n    if (iserror && (name !== editName || email !== editEmail)) {\n      this.setState({\n        disabled: false,\n      });\n    }\n  };\n  onClickHandler = async (value) => {\n    const { name, email, password } = this.state;\n    const token = localStorage.getItem('token');\n    const { handleEdit, data, handleEditClose } = this.props;\n    const { originalId: editId } = data;\n    await this.setState({\n      loader: true,\n      disabled: true,\n    });\n    const response = await callApi(\n      'put',\n      '/trainee',\n      { data: { name, email, password, id: editId } },\n      {\n        headers: {\n          authorization: token,\n          Accept: 'application/json',\n          'Content-Type': 'application/json',\n        },\n      }\n    );\n    if (response.status === 'ok') {\n      handleEdit({\n        name,\n        email,\n      });\n      value(response.message, 'success');\n      handleEditClose();\n    } else {\n      value(response.message, 'error');\n    }\n\n    this.setState({\n      loader: false,\n      disabled: false,\n    });\n  };\n\n  render() {\n    const { Editopen, handleEditClose, data } = this.props;\n    const { error, loader, disabled } = this.state;\n    const { name: editName, email: editEmail } = data;\n    return (\n      <div>\n        <Dialog\n          open={Editopen}\n          onClose={handleEditClose}\n          onMouseEnter={this.handleSet}\n          variant='outlined'\n          color='primary'\n          aria-labelledby='form-dialog-title'\n        >\n          <DialogTitle id='form-dialog-title'>Edit Trainee</DialogTitle>\n          <DialogContent>\n            <DialogContentText>Edit your trainee details</DialogContentText>\n            <Grid container spacing={2}>\n              <Grid item xs={12}>\n                <TextField\n                  autoFocus\n                  error={!!error.name}\n                  id='name'\n                  type='text'\n                  variant='outlined'\n                  style={{ width: '100%' }}\n                  margin='dense'\n                  defaultValue={editName}\n                  helperText={this.getError('name')}\n                  onChange={this.handleOnChange('name')}\n                  fullWidth\n                  InputProps={{\n                    startAdornment: (\n                      <InputAdornment position='start'>\n                        <PersonIcon />\n                      </InputAdornment>\n                    ),\n                  }}\n                />\n              </Grid>\n              <br />\n              <br />\n              <Grid item xs={12}>\n                <TextField\n                  error={!!error.email}\n                  id='email'\n                  type='email'\n                  variant='outlined'\n                  style={{ width: '100%' }}\n                  margin='dense'\n                  defaultValue={editEmail}\n                  helperText={this.getError('email')}\n                  onChange={this.handleOnChange('email')}\n                  InputProps={{\n                    startAdornment: (\n                      <InputAdornment position='start'>\n                        <EmailIcon />\n                      </InputAdornment>\n                    ),\n                  }}\n                  fullWidth\n                />\n              </Grid>\n            </Grid>\n            <br />\n            <br />\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={handleEditClose} color='primary'>\n              Cancel\n            </Button>\n            <snackbarContext.Consumer>\n              {(value) => (\n                <Button\n                  onClick={() => this.onClickHandler(value)}\n                  color='primary'\n                  variant='contained'\n                  disabled={disabled}\n                >\n                  <span>{loader ? <CircularProgress size={20} /> : ''}</span>\n                  Submit\n                </Button>\n              )}\n            </snackbarContext.Consumer>\n          </DialogActions>\n        </Dialog>\n      </div>\n    );\n  }\n}\nEditDialog.propTypes = {\n  Editopen: PropTypes.bool.isRequired,\n  handleEditClose: PropTypes.func.isRequired,\n  handleEdit: PropTypes.func.isRequired,\n};\nexport default EditDialog;\n"]},"metadata":{},"sourceType":"module"}