{"ast":null,"code":"var _jsxFileName = \"/home/ujjwal.jain/apollo-client/src/components/selectField/selectField.jsx\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Select, Div1 } from './style';\n\nfunction SelectField(props) {\n  const {\n    input,\n    error,\n    onChange,\n    options,\n    onBlur\n  } = props;\n  const {\n    defaultText\n  } = props;\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }\n  }, input)), /*#__PURE__*/React.createElement(Select, {\n    className: error === '' ? '' : 'error',\n    onChange: onChange,\n    error: error,\n    onBlur: onBlur,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }\n  }, defaultText && /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 25\n    }\n  }, defaultText), options && options.length && options.map(({\n    value,\n    label\n  }) => /*#__PURE__*/React.createElement(\"option\", {\n    key: label,\n    value: value,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }\n  }, label))), /*#__PURE__*/React.createElement(Div1, {\n    className: error === '' ? 'noerror' : 'error',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, error)));\n}\n\nexport default SelectField;\nSelectField.propTypes = {\n  error: PropTypes.string,\n  onChange: PropTypes.string.isRequired,\n  options: PropTypes.arrayOf(PropTypes.string),\n  input: PropTypes.string.isRequired,\n  defaultText: PropTypes.string,\n  onBlur: PropTypes.string.isRequired\n};\nSelectField.defaultProps = {\n  error: '',\n  options: [],\n  defaultText: 'Select'\n};","map":{"version":3,"sources":["/home/ujjwal.jain/apollo-client/src/components/selectField/selectField.jsx"],"names":["React","PropTypes","Select","Div1","SelectField","props","input","error","onChange","options","onBlur","defaultText","length","map","value","label","propTypes","string","isRequired","arrayOf","defaultProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,MAAT,EAAiBC,IAAjB,QAA6B,SAA7B;;AAEA,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AAC1B,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA,KAAT;AAAgBC,IAAAA,QAAhB;AAA0BC,IAAAA,OAA1B;AAAmCC,IAAAA;AAAnC,MAA8CL,KAApD;AACA,QAAM;AAAEM,IAAAA;AAAF,MAAkBN,KAAxB;AACA,sBACE,uDACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIC,KAAJ,CADF,CADF,eAIE,oBAAC,MAAD;AACE,IAAA,SAAS,EAAEC,KAAK,KAAK,EAAV,GAAe,EAAf,GAAoB,OADjC;AAEE,IAAA,QAAQ,EAAEC,QAFZ;AAGE,IAAA,KAAK,EAAED,KAHT;AAIE,IAAA,MAAM,EAAEG,MAJV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMGC,WAAW,iBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAASA,WAAT,CANlB,EAOGF,OAAO,IACNA,OAAO,CAACG,MADT,IAECH,OAAO,CAACI,GAAR,CAAY,CAAC;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT,GAAD,kBACV;AAAQ,IAAA,GAAG,EAAEA,KAAb;AAAoB,IAAA,KAAK,EAAED,KAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGC,KADH,CADF,CATJ,CAJF,eAmBE,oBAAC,IAAD;AAAM,IAAA,SAAS,EAAER,KAAK,KAAK,EAAV,GAAe,SAAf,GAA2B,OAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIA,KAAJ,CADF,CAnBF,CADF;AAyBD;;AAED,eAAeH,WAAf;AAEAA,WAAW,CAACY,SAAZ,GAAwB;AACtBT,EAAAA,KAAK,EAAEN,SAAS,CAACgB,MADK;AAEtBT,EAAAA,QAAQ,EAAEP,SAAS,CAACgB,MAAV,CAAiBC,UAFL;AAGtBT,EAAAA,OAAO,EAAER,SAAS,CAACkB,OAAV,CAAkBlB,SAAS,CAACgB,MAA5B,CAHa;AAItBX,EAAAA,KAAK,EAAEL,SAAS,CAACgB,MAAV,CAAiBC,UAJF;AAKtBP,EAAAA,WAAW,EAAEV,SAAS,CAACgB,MALD;AAMtBP,EAAAA,MAAM,EAAET,SAAS,CAACgB,MAAV,CAAiBC;AANH,CAAxB;AAQAd,WAAW,CAACgB,YAAZ,GAA2B;AACzBb,EAAAA,KAAK,EAAE,EADkB;AAEzBE,EAAAA,OAAO,EAAE,EAFgB;AAGzBE,EAAAA,WAAW,EAAE;AAHY,CAA3B","sourcesContent":["import React from 'react';\n\nimport PropTypes from 'prop-types';\nimport { Select, Div1 } from './style';\n\nfunction SelectField(props) {\n  const { input, error, onChange, options, onBlur } = props;\n  const { defaultText } = props;\n  return (\n    <>\n      <p>\n        <b>{input}</b>\n      </p>\n      <Select\n        className={error === '' ? '' : 'error'}\n        onChange={onChange}\n        error={error}\n        onBlur={onBlur}\n      >\n        {defaultText && <option>{defaultText}</option>}\n        {options &&\n          options.length &&\n          options.map(({ value, label }) => (\n            <option key={label} value={value}>\n              {label}\n            </option>\n          ))}\n      </Select>\n      <Div1 className={error === '' ? 'noerror' : 'error'}>\n        <p>{error}</p>\n      </Div1>\n    </>\n  );\n}\n\nexport default SelectField;\n\nSelectField.propTypes = {\n  error: PropTypes.string,\n  onChange: PropTypes.string.isRequired,\n  options: PropTypes.arrayOf(PropTypes.string),\n  input: PropTypes.string.isRequired,\n  defaultText: PropTypes.string,\n  onBlur: PropTypes.string.isRequired,\n};\nSelectField.defaultProps = {\n  error: '',\n  options: [],\n  defaultText: 'Select',\n};\n"]},"metadata":{},"sourceType":"module"}