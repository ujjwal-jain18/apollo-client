{"ast":null,"code":"var _jsxFileName = \"/home/ujjwal.jain/apollo-client/src/components/slider/slider.jsx\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Img from './style';\nimport { PUBLIC_IMAGE_FOLDER, DEFAULT_BANNER_IMAGE, Total } from '../../configs/constants';\nimport { getNextRoundRobin, getRandomNumber } from '../../libs/utils/math';\n\nclass Slider extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      current: -1\n    };\n  }\n\n  componentDidMount() {\n    const {\n      random,\n      duration\n    } = this.props;\n    let {\n      current\n    } = this.state;\n    this.id = setInterval(() => {\n      if (random) {\n        current = getRandomNumber(Total);\n      } else {\n        current = getNextRoundRobin(current, Total);\n      }\n\n      this.setState({\n        current\n      });\n    }, duration);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.id);\n  }\n\n  render() {\n    const {\n      current\n    } = this.state;\n    const {\n      alttext,\n      height,\n      duration,\n      banner\n    } = this.props;\n    const {\n      defaultbanner\n    } = this.props;\n\n    if (current === -1 || banner.length === 0) {\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n        align: \"center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Img, {\n        src: `${PUBLIC_IMAGE_FOLDER}${defaultbanner}`,\n        alt: alttext,\n        height: height,\n        duration: duration,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }\n      })));\n    }\n\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      align: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Img, {\n      src: `${PUBLIC_IMAGE_FOLDER}${banner[current]}`,\n      alt: alttext,\n      height: height,\n      duration: duration,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}\n\nexport default Slider;\nSlider.propTypes = {\n  alttext: PropTypes.string,\n  banner: PropTypes.arrayOf(PropTypes.string),\n  defaultbanner: PropTypes.string,\n  duration: PropTypes.number,\n  height: PropTypes.number,\n  random: PropTypes.bool\n};\nSlider.defaultProps = {\n  alttext: 'defaultbanner',\n  banner: [],\n  defaultbanner: DEFAULT_BANNER_IMAGE,\n  duration: 2000,\n  height: 200,\n  random: false\n};","map":{"version":3,"sources":["/home/ujjwal.jain/apollo-client/src/components/slider/slider.jsx"],"names":["React","PropTypes","Img","PUBLIC_IMAGE_FOLDER","DEFAULT_BANNER_IMAGE","Total","getNextRoundRobin","getRandomNumber","Slider","Component","constructor","props","state","current","componentDidMount","random","duration","id","setInterval","setState","componentWillUnmount","clearInterval","render","alttext","height","banner","defaultbanner","length","propTypes","string","arrayOf","number","bool","defaultProps"],"mappings":"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","sourcesContent":["import React from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport Img from './style';\n\nimport {\n  PUBLIC_IMAGE_FOLDER,\n  DEFAULT_BANNER_IMAGE,\n  Total,\n} from '../../configs/constants';\n\nimport { getNextRoundRobin, getRandomNumber } from '../../libs/utils/math';\n\nclass Slider extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      current: -1,\n    };\n  }\n\n  componentDidMount() {\n    const { random, duration } = this.props;\n    let { current } = this.state;\n    this.id = setInterval(() => {\n      if (random) {\n        current = getRandomNumber(Total);\n      } else {\n        current = getNextRoundRobin(current, Total);\n      }\n      this.setState({ current });\n    }, duration);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.id);\n  }\n\n  render() {\n    const { current } = this.state;\n    const { alttext, height, duration, banner } = this.props;\n    const { defaultbanner } = this.props;\n    if (current === -1 || banner.length === 0) {\n      return (\n        <>\n          <div align='center'>\n            <Img\n              src={`${PUBLIC_IMAGE_FOLDER}${defaultbanner}`}\n              alt={alttext}\n              height={height}\n              duration={duration}\n            />\n          </div>\n        </>\n      );\n    }\n    return (\n      <>\n        <div align='center'>\n          <Img\n            src={`${PUBLIC_IMAGE_FOLDER}${banner[current]}`}\n            alt={alttext}\n            height={height}\n            duration={duration}\n          />\n        </div>\n      </>\n    );\n  }\n}\nexport default Slider;\nSlider.propTypes = {\n  alttext: PropTypes.string,\n  banner: PropTypes.arrayOf(PropTypes.string),\n  defaultbanner: PropTypes.string,\n  duration: PropTypes.number,\n  height: PropTypes.number,\n  random: PropTypes.bool,\n};\nSlider.defaultProps = {\n  alttext: 'defaultbanner',\n  banner: [],\n  defaultbanner: DEFAULT_BANNER_IMAGE,\n  duration: 2000,\n  height: 200,\n  random: false,\n};\n"]},"metadata":{},"sourceType":"module"}